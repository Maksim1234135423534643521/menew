{"name": "Кнопка финиш в установочнике", "status": "broken", "statusDetails": {"message": "OSError: Failed to read buttons/install_finish3.PNG because file is missing, has improper permissions, or is an unsupported or invalid format", "trace": "self = <test_jne.TestInstall object at 0x00000186185D2150>\n\n    @allure.title(\"Кнопка финиш в установочнике\")\n    def test_button(self):\n        with allure.step(\"search_next\"):\n            timeout = time.time() + 30\n            while True:\n>               button = pyautogui.locateOnScreen('buttons/install_finish3.PNG', confidence=0.6)\n\ntest_jne.py:338: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\interpreter_python\\Lib\\site-packages\\pyautogui\\__init__.py:175: in wrapper\n    return wrappedFunction(*args, **kwargs)\n..\\interpreter_python\\Lib\\site-packages\\pyautogui\\__init__.py:213: in locateOnScreen\n    return pyscreeze.locateOnScreen(*args, **kwargs)\n..\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py:373: in locateOnScreen\n    retVal = locate(image, screenshotIm, **kwargs)\n..\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py:353: in locate\n    points = tuple(locateAll(needleImage, haystackImage, **kwargs))\n..\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py:207: in _locateAll_opencv\n    needleImage = _load_cv2(needleImage, grayscale)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nimg = 'buttons/install_finish3.PNG', grayscale = False\n\n    def _load_cv2(img, grayscale=None):\n        \"\"\"\n        TODO\n        \"\"\"\n        # load images if given filename, or convert as needed to opencv\n        # Alpha layer just causes failures at this point, so flatten to RGB.\n        # RGBA: load with -1 * cv2.CV_LOAD_IMAGE_COLOR to preserve alpha\n        # to matchTemplate, need template and image to be the same wrt having alpha\n    \n        if grayscale is None:\n            grayscale = GRAYSCALE_DEFAULT\n        if isinstance(img, (str, unicode)):\n            # The function imread loads an image from the specified file and\n            # returns it. If the image cannot be read (because of missing\n            # file, improper permissions, unsupported or invalid format),\n            # the function returns an empty matrix\n            # http://docs.opencv.org/3.0-beta/modules/imgcodecs/doc/reading_and_writing_images.html\n            if grayscale:\n                img_cv = cv2.imread(img, LOAD_GRAYSCALE)\n            else:\n                img_cv = cv2.imread(img, LOAD_COLOR)\n            if img_cv is None:\n>               raise IOError(\"Failed to read %s because file is missing, \"\n                              \"has improper permissions, or is an \"\nE                             OSError: Failed to read buttons/install_finish3.PNG because file is missing, has improper permissions, or is an unsupported or invalid format\n\n..\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py:170: OSError"}, "steps": [{"name": "search_next", "status": "broken", "statusDetails": {"message": "OSError: Failed to read buttons/install_finish3.PNG because file is missing, has improper permissions, or is an unsupported or invalid format\n", "trace": "  File \"C:\\Users\\User\\tests_with_otchets\\test_jne.py\", line 338, in test_button\n    button = pyautogui.locateOnScreen('buttons/install_finish3.PNG', confidence=0.6)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyautogui\\__init__.py\", line 175, in wrapper\n    return wrappedFunction(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyautogui\\__init__.py\", line 213, in locateOnScreen\n    return pyscreeze.locateOnScreen(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py\", line 373, in locateOnScreen\n    retVal = locate(image, screenshotIm, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py\", line 353, in locate\n    points = tuple(locateAll(needleImage, haystackImage, **kwargs))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py\", line 207, in _locateAll_opencv\n    needleImage = _load_cv2(needleImage, grayscale)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\interpreter_python\\Lib\\site-packages\\pyscreeze\\__init__.py\", line 170, in _load_cv2\n    raise IOError(\"Failed to read %s because file is missing, \"\n"}, "start": 1691568126234, "stop": 1691568126288}], "attachments": [{"name": "stderr", "source": "8f431597-b501-42c8-955c-945cb08d3f1e-attachment.txt", "type": "text/plain"}], "start": 1691568126234, "stop": 1691568126289, "uuid": "6f4f3a54-b0a4-4e92-b56f-fbb6e87e8203", "historyId": "e76998e6f98c480e370d79b41a8c9a40", "testCaseId": "d5771ae85c92f1e7105540167616c81e", "fullName": "test_jne.TestInstall#test_button", "labels": [{"name": "feature", "value": "Первичная установка ПМ"}, {"name": "suite", "value": "test_jne"}, {"name": "subSuite", "value": "TestInstall"}, {"name": "host", "value": "PCLite"}, {"name": "thread", "value": "4864-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_jne"}]}